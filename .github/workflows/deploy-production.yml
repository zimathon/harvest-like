name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: harvest-a82c0
  REGION: asia-northeast1
  SERVICE_NAME: harvest-backend
  REPOSITORY_NAME: harvest-backend

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
        continue-on-error: true  # テストが失敗してもデプロイを続行（開発中のため）

  build-and-deploy-backend:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      id-token: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev
      
      - name: Build Docker image
        working-directory: ./server
        run: |
          docker build \
            --platform linux/amd64 \
            -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/backend:${{ github.sha }} \
            -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/backend:latest \
            -f Dockerfile.production .
      
      - name: Push Docker image
        run: |
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/backend:${{ github.sha }}
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/backend:latest
      
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/backend:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars NODE_ENV=production,PROJECT_ID=${{ env.PROJECT_ID }},USE_FIRESTORE_EMULATOR=false,JWT_SECRET=${{ secrets.JWT_SECRET }},CORS_ALLOWED_ORIGINS="${{ secrets.CORS_ALLOWED_ORIGINS }}" \
            --min-instances 0 \
            --max-instances 1 \
            --memory 256Mi \
            --cpu 1 \
            --timeout 60

  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build frontend
        run: npm run build
        env:
          VITE_API_BASE_URL: https://harvest-backend-sxoezkwvgq-an.a.run.app/api/v2
      
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          channelId: live
          projectId: ${{ env.PROJECT_ID }}

  notify:
    runs-on: ubuntu-latest
    needs: [build-and-deploy-backend, build-and-deploy-frontend]
    if: always()
    
    steps:
      - name: Notify Slack
        if: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ "${{ needs.build-and-deploy-backend.result }}" == "success" ] && [ "${{ needs.build-and-deploy-frontend.result }}" == "success" ]; then
            STATUS="✅ Success"
            COLOR="good"
          else
            STATUS="❌ Failed"
            COLOR="danger"
          fi
          
          curl -X POST ${{ secrets.SLACK_WEBHOOK_URL }} \
            -H 'Content-Type: application/json' \
            -d "{
              \"text\": \"Deployment $STATUS\",
              \"attachments\": [{
                \"color\": \"$COLOR\",
                \"fields\": [
                  {
                    \"title\": \"Project\",
                    \"value\": \"Harvest-like\",
                    \"short\": true
                  },
                  {
                    \"title\": \"Branch\",
                    \"value\": \"${{ github.ref_name }}\",
                    \"short\": true
                  },
                  {
                    \"title\": \"Commit\",
                    \"value\": \"${{ github.sha }}\",
                    \"short\": false
                  },
                  {
                    \"title\": \"URLs\",
                    \"value\": \"Frontend: https://harvest-a82c0.web.app\\nBackend: https://harvest-backend-sxoezkwvgq-an.a.run.app\",
                    \"short\": false
                  }
                ]
              }]
            }"