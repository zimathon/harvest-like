version: '3.8'

services:
  server:
    build:
      context: . # コンテキストをカレントディレクトリに変更
      dockerfile: Dockerfile
    container_name: harvest-like-server
    ports:
      - "5001:5000" # ホストの5001番をコンテナの5000番にマッピング
    env_file:
      - ./.env # .env ファイルのパスを修正 (docker-compose.yml と同じ階層)
    environment:
      # Docker ComposeからDB接続情報を上書き（コンテナ名をホストとして使用）
      - MONGO_URI=mongodb://mongo:27017/harvest-like # 'mongo'は下のDBサービス名
    volumes:
      # 開発時: ホストのsrcをコンテナのsrcにマウントしてコード変更を反映
      # 注意: 本番環境ではボリュームは不要、かつ node_modules はマウントしない
      - ./src:/app/src
      # nodemonを動かす場合や node_modules をマウントしない場合は以下のようにする
      # - ./server:/app
      # - /app/node_modules # node_modules をマウント対象から除外
    depends_on:
      - mongo # DBコンテナの起動後にserverコンテナを起動
    networks:
      - app-network

  mongo:
    image: mongo:latest # MongoDBの公式イメージを使用
    container_name: harvest-like-mongo
    ports:
      - "27017:27017" # ホストからDBにアクセスしたい場合（開発用）
    volumes:
      - mongo-data:/data/db # DBデータを永続化
    networks:
      - app-network

volumes:
  mongo-data: # DBデータ永続化用の名前付きボリューム

networks:
  app-network: # コンテナ間通信用のネットワーク
    driver: bridge
